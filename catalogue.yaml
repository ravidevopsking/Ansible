- name: catalogue
  hosts: catalogue
  become: yes
  tasks:
  - name: disable default nodejs 10 and enable nodejs 18
    ansible.builtin.shell: dnf module disable nodejs -y ; dnf module enable nodejs:18 -y

  - name: Install nodejs
    ansible.builtin.dnf:
      name: nodejs
      state: present

  - name: Add the user roboshop
    ansible.builtin.user:
      name: roboshop
  
  - name: Recursively remove app directory
    ansible.builtin.file:
      path: /app
      state: absent

  - name: create app directory
    ansible.builtin.file:
      path: /app
      state: directory

  - name: download application code
    ansible.builtin.get_url:
      url: https://roboshop-builds.s3.amazonaws.com/catalogue.zip
      dest: /tmp

  - name: extract catalogue application
    ansible.builtin.unarchive:
      src: /tmp/catalogue.zip
      dest: /app
      remote_src: yes

  - name: Install dependencies
    ansible.builtin.command: npm Install
    args:
      chdir: /app

  - name: copy catalogue service
    ansible.builtin.copy:
      src: catalogue.service
      dest: /etc/systemd/system/catalogue.service

  - name: daemon reload and start
    ansible.builtin.systemd_service:
      daemon_reload: true
#NOTE: START service after loading catalogue data 
# For the application to work fully functional we need to load schema to the Database.
# Schemas are usually part of application code and developer will provide them as part of development.
# We need to load the schema. To load schema we need to install mongodb client.
# To have it installed we can setup MongoDB repo and install mongodb-client
  - name: copy mongodb repo
    ansible.builtin.copy:
      src: mongodb.repo
      dest: /etc/yum.repos.d/mongodb.repo

  - name: Install mongodb client
    ansible.builtin.package:
      name: mongodb-org-shell
      state: present
  
  - name: get the categories count
    ansible.builtin.command:  mongo --host mongodb.raviskingdom.online --quiet --eval 'db = db.getSiblingDB("catalogue"); db.products.count()'
    register: product_count

  - name: print the count
    ansible.builtin.debug:
      msg: "product count: {{product_count}}"
 
  - name: load catalogue data
    ansible.builtin.command: mongo --host mongodb.raviskingdom.online < /app/schema/catalogue.js
    when: product_count.stdout == "0"    #keep double quotes as json o/p is in strings , 0 means not exist, 1 means present

  - name: start and enable catalogue
    ansible.builtin.service:
      name: catalogue
      state: restarted
      enabled: yes

